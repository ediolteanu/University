Student: Olteanu Eduard-Florin
Grupa: 324CDb

1. Sa se scrie un algoritm care afiseaza toate permutarile de ordin N in ordine 
lexicografica. 
N = 3;

mult_numere = {1, 2, 3}
solutie = {}

solutie -> {1};       mult_numere -> {2, 3}
solutie -> {1, 2};    mult_numere -> {3}
solutie -> {1, 2, 3}; mult_numere -> {} // solutie
solutie -> {1, 3};    mult_numere -> {2}
solutie -> {1, 3, 2}; mult_numere -> {} // solutie
solutie -> {2};       mult_numere -> {1, 3}
solutie -> {2, 1};    mult_numere -> {3}
solutie -> {2, 1, 3}; mult_numere -> {} // solutie
solutie -> {2, 3};    mult_numere -> {1}
solutie -> {2, 3, 1}; mult_numere -> {} // solutie
solutie -> {3};       mult_numere -> {1, 2}
solutie -> {3, 1};    mult_numere -> {2}
solutie -> {3, 1, 2}; mult_numere -> {} // solutie
solutie -> {3, 2};    mult_numere -> {1}
solutie -> {3, 2, 1}; mult_numere -> {} // solutie



2. Sa se scrie un algoritm care afiseaza toate submultimile formate din primele 
N numere naturale, inclusiv multimea vida.
N = 3;

seq: 0
seq: 0 0
seq: 0 0 0 -> {}
seq: 0 0 1 -> {3}
seq: 0 1
seq: 0 1 0 -> {2}
seq: 0 1 1 -> {2, 3}
seq: 1
seq: 1 0
seq: 1 0 0 -> {1}
seq: 1 0 1 -> {1, 3}
seq: 1 1
seq: 1 1 0 -> {1, 2}
seq: 1 1 1 -> {1, 2, 3}

3. Problema damelor. 
  Dandu-se o tabla de dimensiune N X N, N>=4, sa se afiseze o
metoda de a pune N dame pe tabla de sah astfel incat sa nu se atace doua cate 
doua.
N = 4;

sol -> 0
sol -> 0 2
sol -> 0 2 x
sol -> 0 3
sol -> 0 3 1
sol -> 0 3 1 x
sol -> 0 3 x
sol -> 0 x
sol -> 1
sol -> 1 3
sol -> 1 3 0
sol -> 1 3 0 2    // Solutie
sol -> 1 3 x
sol -> 1 x
sol -> 2
sol -> 2 0
sol -> 2 0 3
sol -> 2 0 3 1    // Solutie
sol -> 2 0 x
sol -> 2 x
sol -> 3
sol -> 3 0
sol -> 3 0 2
sol -> 3 0 2 x
sol -> 3 0 x
sol -> 3 1
sol -> 3 1 x
sol -> 3 x
sol -> x
